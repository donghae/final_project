<?xml version="1.0" encoding="UTF-8"?>

		<!DOCTYPE mapper
		    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">	    
		    
<mapper namespace="com.spring.projectFinal.persistence.DTDAO">

<!-- 관리자 로그인 -->
<select id="dtAdminLogin" parameterType="java.util.Map" resultType="int">
	SELECT count(*) FROM TBL_ADMIN WHERE ad_no=#{id} AND ad_pwd=#{pwd}
</select>

<!-- 관리자 기숙사 학생 수 조회 -->
<select id="getDormStInfoCnt" resultType="int">
	SELECT count(*) FROM TBL_DORM_STUDENT
</select>

<!-- 관리자 기숙사 학생 목록 -->
<select id="getDormStInfoLiDormSt" parameterType="java.util.Map" resultType="com.spring.projectFinal.DTVO.Admin_stu_selectVO">
	SELECT s.st_no,st.st_name, st.maj_cd, d.dorm_room, dorm_st_dt, dorm_end_dt 
	  FROM TBL_DORM_STUDENT s JOIN TBL_DORM d
	  ON s.dorm_room = d.dorm_room
	  JOIN TBL_STUDENT st
	  ON st.st_no = s.st_no
	ORDER BY d.dorm_room ASC
</select>

<!-- 관리자 기숙사 학생 등록 -->
<insert id="addDormStInfo" parameterType="java.util.Map"> 
	INSERT ALL
	INTO TBL_DORM_STUDENT(st_no, dorm_room, dorm_st_dt, dorm_end_dt) VALUES(#{st_no},#{dorm_room},#{start_dorm},#{end_dorm})
	INTO TBL_OVERNIGHT(st_no,dorm_on_sc) VALUES(#{st_no},#{dorm_overnight})
	INTO TBL_PENALTY(st_no,dorm_penalty) VALUES(#{st_no},#{dorm_penalty})
	SELECT * FROM DUAL
</insert>



<!-- 관리자 공지사항 게시 건수 조회 -->
<select id="getDormNoticeCnt" resultType="int">
	SELECT count(*) FROM TBL_DORM_NOTICE
</select>

<!-- 관리자 공지사항 게시 목록 조회 -->
<select id="getDormNotice" parameterType="java.util.Map" resultType="com.spring.projectFinal.DTVO.Admin_notice_selectVO">
	 	<![CDATA[ 
	 	SELECT * 
	 	 FROM (SELECT dorm_n_no, ad_no, dorm_n_title, dorm_n_content, dorm_n_dt, dorm_n_file, dorm_n_cnt, rownum as rNum
				FROM(
				     SELECT * FROM TBL_DORM_NOTICE
				     ORDER BY dorm_n_no DESC
				     )   
			   ) 
		 WHERE rNum >= #{start} AND rNum <=#{end}
		 ]]>
</select>

<!-- 관리자 공지사항 제목 클릭시 조회수 1증가 -->
<update id="getDormNoticeCntUp" parameterType="java.util.Map" >
	UPDATE TBL_DORM_NOTICE SET dorm_n_cnt=#{dorm_n_cnt}+1 WHERE dorm_n_no=#{dorm_n_no}
</update>

<!-- 관리자 공지시항 상세페이지 1건의 목록 뿌리기여서 ArrayList는 안썼다 .. -->
<select id="getDormNoticeDetail" resultType="com.spring.projectFinal.DTVO.Admin_notice_selectVO">
	SELECT * FROM TBL_DORM_NOTICE WHERE dorm_n_no=#{dorm_n_no}
</select>

<!-- 관리자 공지사항 수정 값 뿌리기 select -->
<select id="updateDormNotice" resultType="com.spring.projectFinal.DTVO.Admin_notice_selectVO">
	SELECT * FROM TBL_DORM_NOTICE WHERE dorm_n_no=#{dorm_n_no}
</select>

<!-- 관리자 공지사항 수정 update -->
<update id="updateDormNoticeCon" parameterType="java.util.Map">
	UPDATE TBL_DORM_NOTICE SET dorm_n_title=#{dorm_n_title}, dorm_n_content=#{dorm_n_content}, dorm_n_dt=#{dorm_n_dt}, dorm_n_file=#{dorm_n_file} WHERE dorm_n_no=#{dorm_n_no}
</update>

<!-- 관리자 공지사항 등록 insert -->
<insert id="addDormNotice" parameterType="com.spring.projectFinal.DTVO.Admin_notice_selectVO">
	INSERT INTO TBL_DORM_NOTICE(dorm_n_no, ad_no, dorm_n_title, dorm_n_content, dorm_n_dt, dorm_n_file, dorm_n_cnt)
	VALUES(tbl_dorm_notice_seq.nextval,#{ad_no},#{dorm_n_title},#{dorm_n_content},TO_DATE(SYSDATE,'yyyy/mm/dd'),#{dorm_n_file},0)
</insert>



<!-- 학생 외박 조회 -->
<select id="dtStuNightSelect" resultType="com.spring.projectFinal.DTVO.Dt_stu_overnight_selectVO">
	SELECT st.st_no, st.st_name, dt.dorm_room,dorm_on_sc, dorm_ex_dt, dorm_ex_fl, dorm_reason
	FROM TBL_OVERNIGHT ov JOIN TBL_DORM_STUDENT dt
	ON ov.st_no = dt.st_no
	JOIN TBL_STUDENT st
	ON st.st_no = dt.st_no
	WHERE ov.st_no = #{st_no}
	ORDER BY dorm_ex_dt DESC
</select>

<!-- 학생 외박 신청 -->
<insert id="dtStuNightInsert" parameterType="java.util.Map" >
	INSERT INTO TBL_OVERNIGHT (st_no,dorm_on_sc,dorm_ex_dt,dorm_ex_fl,dorm_reason)
	VALUES(#{st_no},1,#{dorm_ex_dt},1,#{textarea})
</insert>

<!-- 학생 외박 수정 pwd  -->
<select id="dtStuNightpwd" resultType="int">
	SELECT count(*) FROM TBL_OVERNIGHT WHERE st_no=#{st_no} AND dorm_ex_fl = 1
</select>

<!-- 학생 외박 수정 정보 뿌리기 -->
<select id="dtStuNightUpdate" resultType="com.spring.projectFinal.DTVO.Dt_stu_overnight_selectVO">
	SELECT ov.st_no,ds.dorm_room,ov.dorm_ex_dt,ov.dorm_reason 
	FROM TBL_OVERNIGHT ov JOIN TBL_DORM_STUDENT ds
	ON ov.st_no = ds.st_no
	WHERE ov.st_no=#{st_no}
	AND dorm_ex_fl=1
</select>

<!-- 학생 외박 정보 수정 처리 -->
<update id="dtStuNightrevision" parameterType="java.util.Map">
	UPDATE TBL_OVERNIGHT SET dorm_ex_dt=#{dorm_ex_dt},dorm_reason=#{textarea} WHERE st_no=#{st_no}
</update>

<!-- 학생 외박 신청 삭제 pwd -->
<select id="dtStuNightDeletePwd" resultType="com.spring.projectFinal.DTVO.Dt_stu_overnight_selectVO">
	SELECT st.st_no, st.st_name, dt.dorm_room,dorm_on_sc, dorm_ex_dt, dorm_ex_fl, dorm_reason
	FROM TBL_OVERNIGHT ov JOIN TBL_DORM_STUDENT dt
	ON ov.st_no = dt.st_no
	JOIN TBL_STUDENT st
	ON st.st_no = dt.st_no
	WHERE ov.st_no = #{st_no}
	AND dorm_ex_fl = 1
	ORDER BY dorm_ex_dt DESC
</select>

<!-- 학생 외박 신청 삭제 처리 update dorm_ex_fl > 3으로 바뀐다. -->
<update id="dtStuNightDeletelist" parameterType="java.util.Map">
	UPDATE TBL_ st_no=#{st_no} AND dorm_ex_fl=#{dorm_ex_fl}
</update>

<!-- 학생 벌점 조회 select -->
<select id="dtStuPenalty" resultType="com.spring.projectFinal.DTVO.Dt_stu_penalty_selectVO">
	SELECT st.st_no, st.st_name, ds.dorm_room, pe.dorm_penalty, pe.dorm_penalty_dt, pe.dorm_reason
	FROM TBL_STUDENT st JOIN TBL_DORM_STUDENT ds
	ON st.st_no = ds.st_no
	JOIN TBL_PENALTY pe
	ON st.st_no = pe.st_no
	WHERE st.st_no=#{st_no}
	ORDER BY dorm_penalty_dt DESC
</select>








</mapper>