<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper
	namespace="com.spring.projectFinal.persistence.SMDAO">

	<select id="juminChk" resultType="int" parameterType="string">
		SELECT COUNT(*) FROM TBL_ENTRANCE WHERE ENT_REGI_NO=#{ENT_REGI_NO}
	</select>

	<insert id="applyMember"
		parameterType="com.spring.projectFinal.SMVO.ApplicationVO">
		insert into
		TBL_ENTRANCE(ENT_NO,ENT_NAME,ENT_REGI_NO,ENT_HP,ENT_ZIPCODE,ENT_ADDR1,ENT_ADDR2
		,ENT_EMAIL,ENT_DISABILITY_FL,ENT_HIGHSCHOOL,ENT_GRADE,ENT_MAJ,ENT_IMAGE,ENT_STATE)
		values(TBL_ENTRANCE_seq.nextval,#{ENT_NAME},#{ENT_REGI_NO},#{ENT_HP},#{ENT_ZIPCODE},#{ENT_ADDR1},#{ENT_ADDR2}
		,#{ENT_EMAIL},#{ENT_DISABILITY_FL},#{ENT_HIGHSCHOOL},#{ENT_GRADE},#{ENT_MAJ},#{ENT_IMAGE},1)
	</insert>

	<!-- 지원서관리 목록 개수 조회 -->
	<select id="getArticleCnt" resultType="int">
		select count(*) from
		TBL_ENTRANCE where ENT_STATE=1 AND ENT_MAJ=#{majorNum}
	</select>

	<!-- 지원관리 목록 조회 -->
	<select id="getArticleList"
		resultType="com.spring.projectFinal.SMVO.ApplicationVO"
		parameterType="java.util.Map">
<![CDATA[
SELECT * FROM(SELECT ENT_NO,ENT_NAME,ENT_REGI_NO,ENT_HP,ENT_ZIPCODE,ENT_ADDR1,ENT_ADDR2
	,ENT_EMAIL,ENT_DISABILITY_FL,ENT_HIGHSCHOOL,ENT_GRADE,ENT_MAJ,ENT_IMAGE,ENT_STATE, rownum rnum
	FROM( SELECT * FROM TBL_ENTRANCE ORDER BY ENT_NO DESC))WHERE ENT_STATE=1 AND ENT_MAJ=#{majorNum}
]]>
	</select>

	<!-- 합격자관리 목록 개수 조회 -->
	<select id="getPassArticleCnt" resultType="int">
		select count(*) from
		TBL_ENTRANCE where ENT_STATE=2 AND ENT_MAJ=#{majorNum}
	</select>

	<!-- 합격자관리 목록 조회 -->
	<select id="getPassArticleList"
		resultType="com.spring.projectFinal.SMVO.ApplicationVO"
		parameterType="java.util.Map">
<![CDATA[
SELECT * FROM(SELECT ENT_NO,ENT_NAME,ENT_REGI_NO,ENT_HP,ENT_ZIPCODE,ENT_ADDR1,ENT_ADDR2
	,ENT_EMAIL,ENT_DISABILITY_FL,ENT_HIGHSCHOOL,ENT_GRADE,ENT_MAJ,ENT_IMAGE,ENT_STATE, rownum rnum
	FROM( SELECT * FROM TBL_ENTRANCE ORDER BY ENT_NO DESC))WHERE ENT_STATE=2 AND ENT_MAJ=#{majorNum}
	order by ENT_GRADE desc
]]>
	</select>

	<!-- 예비합격자관리 목록 개수 조회 -->
	<select id="getExtraArticleCnt" resultType="int">
		select count(*) from
		TBL_ENTRANCE where ENT_STATE=3 AND ENT_MAJ=#{majorNum}
	</select>

	<!-- 예비합격자관리 목록 조회 -->
	<select id="getExtraArticleList"
		resultType="com.spring.projectFinal.SMVO.ApplicationVO"
		parameterType="java.util.Map">
<![CDATA[
    SELECT * FROM(SELECT ENT_NO,ENT_NAME,ENT_REGI_NO,ENT_HP,ENT_ZIPCODE,ENT_ADDR1,ENT_ADDR2
	,ENT_EMAIL,ENT_DISABILITY_FL,ENT_HIGHSCHOOL,ENT_GRADE,ENT_MAJ,ENT_IMAGE,ENT_STATE, rownum rnum
	FROM( SELECT * FROM TBL_ENTRANCE  where ENT_MAJ=#{majorNum} AND ENT_STATE=3 ORDER BY ENT_NO DESC)) where rnum=1
]]>
	</select>

	<!-- 지원자 합격 처리 -->
	<update id="recognizePass">
<![CDATA[
	update TBL_ENTRANCE set ENT_STATE =2 where ENT_NO IN(
	SELECT ENT_NO FROM(SELECT ENT_NO,ENT_GRADE,ENT_MAJ, rownum rnum
	FROM( SELECT * FROM TBL_ENTRANCE where ENT_MAJ=#{majorNum} ORDER BY  ENT_GRADE desc,ENT_NO DESC))WHERE (rnum >= 0 AND rnum <= 3))
	]]>
	</update>

	<!-- 지원자 불합격 처리 -->
	<update id="recognizeFail">
	<![CDATA[
	update TBL_ENTRANCE set ENT_STATE =3 where ENT_NO IN(
	SELECT ENT_NO FROM(SELECT ENT_NO,ENT_GRADE,ENT_MAJ, rownum rnum
	FROM( SELECT * FROM TBL_ENTRANCE where ENT_MAJ=#{majorNum} ORDER BY  ENT_GRADE desc,ENT_NO DESC))WHERE rnum>3) 
	]]>
	</update>

	<!-- 추가 합격 처리 -->
	<update id="extraRecognizePass">
	<![CDATA[
	update TBL_ENTRANCE set ENT_STATE =2 where ENT_NO IN(
	SELECT ENT_NO FROM(SELECT ENT_NO,ENT_GRADE,ENT_MAJ, rownum rnum
	FROM( SELECT * FROM TBL_ENTRANCE where ENT_MAJ=#{majorNum} AND ENT_STATE=3 ORDER BY  ENT_GRADE desc,ENT_NO DESC))WHERE rnum=1)
	]]>
	</update>


	<!-- 강의 목록 개수 구하기 -->
	<select id="getLectureCnt" resultType="int"
		parameterType="java.util.Map">
		select count(*) from TBL_LECTURE
		<where>
			<if test="lec_day_dt!=null"> lec_day_dt like #{lec_day_dt}</if>
			<if test="lec_name!=null"> and lec_name like '%'||#{lec_name}||'%'</if>
		</where>
	</select>

	<!-- 강의 목록 조회 -->
	<select id="getLectureList"
		resultType="com.spring.projectFinal.SMVO.Lec_Prof_VO"
		parameterType="java.util.Map">
		select * from(select lec_no, prof_name, lec_name, lec_room_no,
		lec_day_dt,
		lec_dt, lec_point, lec_cy_fl, max_person, limit_cnt, rownum
		rnum
		from( select * from TBL_LECTURE l join TBL_PROF p On
		l.prof_no=p.prof_no
		<where>
			<if test="lec_day_dt!=null"> lec_day_dt like #{lec_day_dt}</if>
			<if test="lec_name!=null"> and lec_name like '%'||#{lec_name}||'%'</if>
		</where>
		order by lec_no desc))
	</select>

	<!-- 강의 추가 -->
	<insert id="lecturePlus"
		parameterType="com.spring.projectFinal.SMVO.LectureVO">
		insert into
		TBL_LECTURE(lec_no,lec_name,lec_point,prof_no,lec_dt,lec_day_dt,lec_room_no,lec_cy_fl,max_person,limit_cnt)
		values(TBL_LECTURE_SEQ.nextval,#{lec_name},#{lec_point},#{prof_no},#{lec_dt},#{lec_day_dt},#{lec_room_no}
		,#{lec_cy_fl},#{max_person},50)
	</insert>

	<!-- 검색된 교수 수 구하기 -->
	<select id="getProfCnt" resultType="int"
		parameterType="java.util.Map">
		select count(*) from TBL_PROF
		<where>
			<if test="maj_cd!=null"> maj_cd like #{maj_cd}</if>
			<if test="prof_name!=null"> and prof_name like '%'||#{prof_name}||'%'</if>
		</where>
	</select>

	<!-- 검색된 교수 목록 조회 -->
	<select id="getProfList"
		resultType="com.spring.projectFinal.SMVO.ProfessorVO"
		parameterType="java.util.Map">
		select * from(select prof_no, maj_cd, prof_name, rownum rnum
		from(
		select * from TBL_PROF
		<where>
			<if test="maj_cd!=null"> maj_cd like #{maj_cd}</if>
			<if test="prof_name!=null"> and prof_name like '%'||#{prof_name}||'%'</if>
		</where>
		order by prof_no desc))
	</select>

	<!-- 강의 수정페이지 -->
	<select id="LectureModi"
		resultType="com.spring.projectFinal.SMVO.Lec_Prof_VO">
		select lec_no, prof_name, lec_name, lec_room_no,
		lec_day_dt,p.prof_no,
		lec_dt, lec_point, lec_cy_fl, max_person,
		limit_cnt
		from TBL_LECTURE l join TBL_PROF p On l.prof_no=p.prof_no
		where lec_no=#{lec_no}
	</select>

	<!-- 강의 수정 처리버튼 -->
	<update id="lectureModiPro"
		parameterType="com.spring.projectFinal.SMVO.LectureVO">
		update tbl_lecture set
		lec_name=#{lec_name},lec_point=#{lec_point},prof_no=#{prof_no},
		lec_dt=#{lec_dt},lec_day_dt=#{lec_day_dt},lec_room_no=#{lec_room_no},
		lec_cy_fl=#{lec_cy_fl},max_person=#{max_person}
		where lec_no=#{lec_no}
	</update>

	<!-- 강의 삭제 처리 -->
	<delete id="lectureDel" parameterType="int">
		delete tbl_lecture where
		lec_no=#{lec_no}
	</delete>

	<!-- 아름 -->


	<!-- 합격자 조회 - 지원했는지 확인 -->
	<select id="nmJuminChk" parameterType="java.util.Map"
		resultType="int">
		SELECT COUNT(*) FROM tbl_entrance WHERE ent_name=#{strName}
		AND
		ent_regi_no=#{strJumin}
	</select>

	<!-- 합격자 조회 - -->
	<select id="entStateChk"
		resultType="com.spring.projectFinal.SMVO.ApplicationVO">
		SELECT ent_state FROM tbl_entrance WHERE
		ent_name=#{strName} AND
		ent_regi_no=#{strJumin}
	</select>

	<!-- 학적 관리 > 기본 학적 상세페이지 -->
	<select id="getStudentInfo"
		resultType="com.spring.projectFinal.SMVO.StudentVO">
		select * FROM tbl_student WHERE st_no='218304001'
	</select>

	<!-- 학적 관리 > 기본 학적 상세페이지 - 정보 수정 처리 -->
	<update id="updateStInfo"
		parameterType="com.spring.projectFinal.SMVO.StudentVO">
		UPDATE tbl_student SET st_email=#{st_email},
		st_hp=#{st_hp},
		st_zipcode=#{st_zipcode}, st_addr1=#{st_addr1},
		st_addr2=#{st_addr2},
		st_bk=#{st_bk}, st_bkno=#{st_bkno},
		st_bk_holder=#{st_bk_holder} WHERE
		st_no='218304001'
	</update>

	<!-- 수업관리 > 내 강의실 - 시간표 -->
	<select id="getLectureInfo"
		resultType="com.spring.projectFinal.SMVO.LectureVO"
		parameterType="java.util.Map">
		select * FROM tbl_lecture
		<where>
			<if test="d==0">
				lec_day_dt = '월'
			</if>
			<if test="d==1">
				lec_day_dt = '화'
			</if>
			<if test="d==2">
				lec_day_dt = '수'
			</if>
			<if test="d==3">
				lec_day_dt = '목'
			</if>
			<if test="d==4">
				lec_day_dt = '금'
			</if>
		</where>
	</select>

	<!-- 수업관리 > 내 강의실 > 내 강의 개수 -->
	<select id="getMyLecCnt" resultType="int">
		SELECT COUNT(*)
		FROM (select
		l.lec_no, l.lec_name, p.prof_name, l.lec_day_dt, l.lec_dt,
		l.lec_point
		from tbl_lecture l, tbl_prof p
		where l.prof_no= p.prof_no)
	</select>


	<!-- 수업관리 > 내 강의실 > 내 강의 목록 -->
	<select id="getMyLecList" parameterType="java.util.Map"
		resultType="com.spring.projectFinal.SMVO.Lec_Prof_VO">
      select *
      from (select l.lec_no, l.lec_name, p.prof_name, l.lec_day_dt, l.lec_dt, l.lec_point, rownum rNum
          from tbl_lecture l, tbl_prof p
      where l.prof_no= p.prof_no
      order by l.lec_no)
	</select>

	<!-- 수업관리 > 내 강의실 > 강의목록 > 한 강의의 출결 개수 -->
	<!-- <select id="getAttendCnt" resultType="com.spring.projectFinal.vo.AttendVO"> 
		select count(*) from tbl_attendance where st_no='218304001' and lec_no=1 
		</select> -->

	<!-- 수업관리 > 내 강의실 > 강의목록 > 출결 목록 조회 -->
	<select id="getAttendLi"
		resultType="com.spring.projectFinal.SMVO.AttendVO">
		select attend_fl, rownum
		from tbl_attendance a
		where
		st_no='218304001'
		and lec_no=1
	</select>

	<!-- 성적관리 > 금학기 성적 개수 구하기 -->
	<select id="getGpaThisCnt" resultType="int">
		SELECT COUNT(*)
		FROM
		(select g.gpa_semester, g.lec_no, g.st_no, l.LEC_NAME, g.gpa
		from
		TBL_GPA g, tbl_lecture l
		where g.lec_no = l.lec_no
		AND g.st_no=218304001
		AND g.gpa_semester=#{semester}
		)
	</select>

	<!-- 성적관리 > 금학기 성적 목록 -->
	<select id="getGpaThisList" parameterType="java.util.Map"
		resultType="com.spring.projectFinal.SMVO.Gpa_Lec_VO">
		select g.gpa_semester, g.lec_no, g.st_no, l.LEC_NAME, g.gpa
		from TBL_GPA g, tbl_lecture l
		where g.lec_no = l.lec_no
		AND
		g.st_no=218304001
		AND g.gpa_semester=#{semester}
	</select>


</mapper>